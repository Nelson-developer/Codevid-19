{"remainingRequest":"/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/src/App.vue","mtime":1586479176777},{"path":"/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1586479175913},{"path":"/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1586479176689},{"path":"/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1586479175913},{"path":"/home/nelson/Escritorio/probando-repo-covid/covid-19/frontend/node_modules/vue-loader/lib/index.js","mtime":1586479176689}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}